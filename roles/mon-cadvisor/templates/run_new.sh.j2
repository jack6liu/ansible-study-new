#/bin/bash
help() {
    echo "help:"
    echo "    ./run-cadvisor.sh [OPTIONS]"
    echo "    [OPTIONS]"
    echo "    --force -> to remove existing docker instance, then deploy new one."
    echo "    --safe  -> will not remove existing docker instance with same name."
    exit 0
}

run_container() {
    docker run      \
      --name cadvisor       \
      --hostname cadvisor       \
      --volume /:/rootfs:ro     \
      --volume /var/run:/var/run:rw     \
      --volume /sys:/sys:ro     \
      --volume /var/lib/docker/:/var/lib/docker:ro      \
      --volume /hfc-data/cadvisor/etc/cadvisor.htpasswd:/etc/cadvisor/cadvisor.htpasswd     \
      --publish 0.0.0.0:{{ cadvisor_expose_port }}:8080     \
      --network host        \
      --dns {{ hostvars[groups['dns-server'].0].ansible_host }}     \
      --dns {{ hostvars[groups['dns-server'].1].ansible_host }}     \
      --dns-search {{ dnsmasq_domain }}     \
      --label com.jcloud.group="monitoring"     \
      --label com.jcloud.nodetype="cadvisor"        \
      --restart always      \
      --detach      \
      {{ cadvisor_image }}      \
      --http_auth_file /etc/cadvisor/cadvisor.htpasswd      \
      --http_auth_realm Restricted
}
echo ">> BEGIN"
if [[ $# != '1' ]]; then
    echo "[ERROR] Only take one args."
    echo "      You enter $# args --> \"$@\""
    echo ""
    help
fi
if [[ "$1" == "--force" ]]; then
    echo ">> Deleting existing cadvisor ..."
    docker rm -f cadvisor
    echo ">> Try to run new cadvisor ..."
elif [[ "$1" == "--safe" ]]; then
    echo ">> Try to run new cadvisor ..."
else
    help
fi
run_container
echo ">> END"
