---
# file: roles/mon-prometheus/tasks/main.yml
#
# docker-image: pull image from the list
- name: mon-prometheus | pull docker images
  docker_image:
    name: "{{ prometheus_image }}"
    state: present

# make sure directories exists
- name: mon-prometheus | make sure direcoties needed by mon-prometheus exists
  file:
    path: "/hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/{{ item }}/"
    state: directory
    owner: root
    group: root
    mode: 0644
  with_items:
    - etc
    - data
    - restore

#
# config
#
# copy: copy files for prometheus
- name: mon-prometheus | copy files for prometheus
  copy:
    src: prometheus/
    dest: /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/etc/
    force: yes
    owner: root
    group: root
    mode: 0644

# template: copy containers-up.rules for prometheus
#- name: mon-prometheus | copy containers-up.rules for prometheus
#  template:
#    src: containers-up.rules.j2
#    dest: /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/etc/containers-up.rules
#    force: yes
#    owner: root
#    group: root
#    mode: 0644

# template: copy prometheus.yml for prometheus
- name: mon-prometheus | copy prometheus.yml for prometheus
  template:
    src: prometheus.yml.j2
    dest: /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/etc/prometheus.yml
    force: yes
    owner: root
    group: root
    mode: 0644
#
# launch
#
# docker-container: run prometheus
- name: mon-prometheus | run prometheus
  docker_container:
    name: "{{ inventory_hostname|lower|replace('-','_') }}"
    hostname: "{{ inventory_hostname|lower|replace('-','_') }}"
    image: "{{ prometheus_image }}"
    volumes:
      - /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/etc/:/etc/prometheus/
      - /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/data/:/prometheus/
    command:
      -config.file=/etc/prometheus/prometheus.yml
      -storage.local.path=/prometheus
      -storage.local.target-heap-size=536870912
      -query.staleness-delta=10s
      -web.external-url=http://{{ansible_host}}:{{ prometheus_expose_port }}
    ports:
      - "0.0.0.0:{{ prometheus_expose_port }}:9090"
    dns_servers:
      - "{{ hostvars[groups['dns-server'].0].ansible_host }}"
      - "{{ hostvars[groups['dns-server'].1].ansible_host }}"
    dns_search_domains:
      - "{{ dnsmasq_domain }}"
    labels:
      com.jcloud.group: "monitoring"
      com.jcloud.nodetype: "prometheus"
    restart_policy: always
    restart: yes
    state: started

# template: generate restore script for prometheus
- name: mon-prometheus | generate restore script for prometheus
  template:
    src: run_new.sh.j2
    dest: /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/restore/run-{{ inventory_hostname|lower|replace('-','_') }}.sh
    mode: 0755

# cron: setup cron jobs for backup of prometheus
- name: mon-prometheus | setup cron jobs for backup of prometheus
#       ONLY satinize the file name for /etc/cron.d, cause '.' is not supported!!
  cron:
    name: backup /hfc-data/{{ inventory_hostname|lower|replace('-','_') }}/
    minute: "{{ ( inventory_hostname|lower|replace('-','_') | hash | list | map('int',0,128) | sum ) % 60 }}"
    hour: "{{ (( inventory_hostname|lower|replace('-','_') | hash | list | map('int',0,128) | sum ) % 3) + 1 }}"
    user: root
    job: "/usr/local/bin/monitoring-backup.sh {{ inventory_hostname|lower|replace('-','_') }}"
    cron_file: "{{ inventory_hostname|lower|replace('-','_')|replace('.','_') }}-backup"